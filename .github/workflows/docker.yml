name: Docker Build Only

on:
  workflow_dispatch:
  release:
    types: [published]
  push:
    tags: [v*]

jobs:
  build_docker:
    runs-on: ubuntu-latest
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        install: true

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build nps (no push)
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.nps
        platforms: linux/amd64,linux/arm,linux/arm64
        push: false
        tags: nps:latest, nps:${{ env.RELEASE_VERSION }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
        outputs: type=oci,dest=/tmp/nps-image.tar

    - name: Verify nps image
      run: |
        docker load -i /tmp/nps-image.tar
        docker images | grep nps

    - name: Build npc (no push)
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.npc
        platforms: linux/amd64,linux/arm,linux/arm64
        push: false
        tags: npc:latest, npc:${{ env.RELEASE_VERSION }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
        outputs: type=oci,dest=/tmp/npc-image.tar

    - name: Verify npc image
      run: |
        docker load -i /tmp/npc-image.tar
        docker images | grep npc
